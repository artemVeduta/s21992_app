// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/CoreCommands.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Gamelift.Rt.Proto {

  /// <summary>Holder for reflection information generated from proto/CoreCommands.proto</summary>
  public static partial class CoreCommandsReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/CoreCommands.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoreCommandsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhwcm90by9Db3JlQ29tbWFuZHMucHJvdG8SFWNvbS5nYW1lbGlmdC5ydC5w",
            "cm90byI+CgxMb2dpbkNvbW1hbmQSFwoPcGxheWVyU2Vzc2lvbklkGAEgASgJ",
            "EhUKDWNsaWVudFZlcnNpb24YAiABKAUifgoLTG9naW5SZXN1bHQSDwoHc3Vj",
            "Y2VzcxgBIAEoCBIWCg5yZWNvbm5lY3RUb2tlbhgCIAEoCRIOCgZwZWVySWQY",
            "AyABKAUSEAoIZmFzdFBvcnQYBCABKAUSDgoGY2FDZXJ0GAUgASgMEhQKDGNv",
            "bm5lY3RUb2tlbhgGIAEoCSINCgtQaW5nQ29tbWFuZCIMCgpQaW5nUmVzdWx0",
            "Ij0KFVZlcmlmeUlkZW50aXR5Q29tbWFuZBIOCgZwZWVySWQYASABKAUSFAoM",
            "Y29ubmVjdFRva2VuGAIgASgJIjcKFFZlcmlmeUlkZW50aXR5UmVzdWx0Eg8K",
            "B3N1Y2Nlc3MYASABKAgSDgoGcGVlcklkGAIgASgFIhMKEVVEUENvbm5lY3RN",
            "ZXNzYWdlIiYKFFBsYXllckNvbm5lY3RNZXNzYWdlEg4KBnBlZXJJZBgBIAEo",
            "BSIpChdQbGF5ZXJEaXNjb25uZWN0TWVzc2FnZRIOCgZwZWVySWQYASABKAVi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.LoginCommand), global::Com.Gamelift.Rt.Proto.LoginCommand.Parser, new[]{ "PlayerSessionId", "ClientVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.LoginResult), global::Com.Gamelift.Rt.Proto.LoginResult.Parser, new[]{ "Success", "ReconnectToken", "PeerId", "FastPort", "CaCert", "ConnectToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.PingCommand), global::Com.Gamelift.Rt.Proto.PingCommand.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.PingResult), global::Com.Gamelift.Rt.Proto.PingResult.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.VerifyIdentityCommand), global::Com.Gamelift.Rt.Proto.VerifyIdentityCommand.Parser, new[]{ "PeerId", "ConnectToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.VerifyIdentityResult), global::Com.Gamelift.Rt.Proto.VerifyIdentityResult.Parser, new[]{ "Success", "PeerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.UDPConnectMessage), global::Com.Gamelift.Rt.Proto.UDPConnectMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.PlayerConnectMessage), global::Com.Gamelift.Rt.Proto.PlayerConnectMessage.Parser, new[]{ "PeerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Gamelift.Rt.Proto.PlayerDisconnectMessage), global::Com.Gamelift.Rt.Proto.PlayerDisconnectMessage.Parser, new[]{ "PeerId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///:access=internal
  ///:dontdeserialize
  /// </summary>
  public sealed partial class LoginCommand : pb::IMessage<LoginCommand> {
    private static readonly pb::MessageParser<LoginCommand> _parser = new pb::MessageParser<LoginCommand>(() => new LoginCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginCommand(LoginCommand other) : this() {
      playerSessionId_ = other.playerSessionId_;
      clientVersion_ = other.clientVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginCommand Clone() {
      return new LoginCommand(this);
    }

    /// <summary>Field number for the "playerSessionId" field.</summary>
    public const int PlayerSessionIdFieldNumber = 1;
    private string playerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerSessionId {
      get { return playerSessionId_; }
      set {
        playerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 2;
    private int clientVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSessionId != other.PlayerSessionId) return false;
      if (ClientVersion != other.ClientVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSessionId.Length != 0) hash ^= PlayerSessionId.GetHashCode();
      if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerSessionId);
      }
      if (ClientVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ClientVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerSessionId);
      }
      if (ClientVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginCommand other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSessionId.Length != 0) {
        PlayerSessionId = other.PlayerSessionId;
      }
      if (other.ClientVersion != 0) {
        ClientVersion = other.ClientVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerSessionId = input.ReadString();
            break;
          }
          case 16: {
            ClientVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  ///:dontserialize
  /// </summary>
  public sealed partial class LoginResult : pb::IMessage<LoginResult> {
    private static readonly pb::MessageParser<LoginResult> _parser = new pb::MessageParser<LoginResult>(() => new LoginResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult(LoginResult other) : this() {
      success_ = other.success_;
      reconnectToken_ = other.reconnectToken_;
      peerId_ = other.peerId_;
      fastPort_ = other.fastPort_;
      caCert_ = other.caCert_;
      connectToken_ = other.connectToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult Clone() {
      return new LoginResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "reconnectToken" field.</summary>
    public const int ReconnectTokenFieldNumber = 2;
    private string reconnectToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReconnectToken {
      get { return reconnectToken_; }
      set {
        reconnectToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 3;
    private int peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    /// <summary>Field number for the "fastPort" field.</summary>
    public const int FastPortFieldNumber = 4;
    private int fastPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FastPort {
      get { return fastPort_; }
      set {
        fastPort_ = value;
      }
    }

    /// <summary>Field number for the "caCert" field.</summary>
    public const int CaCertFieldNumber = 5;
    private pb::ByteString caCert_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CaCert {
      get { return caCert_; }
      set {
        caCert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connectToken" field.</summary>
    public const int ConnectTokenFieldNumber = 6;
    private string connectToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectToken {
      get { return connectToken_; }
      set {
        connectToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ReconnectToken != other.ReconnectToken) return false;
      if (PeerId != other.PeerId) return false;
      if (FastPort != other.FastPort) return false;
      if (CaCert != other.CaCert) return false;
      if (ConnectToken != other.ConnectToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ReconnectToken.Length != 0) hash ^= ReconnectToken.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (FastPort != 0) hash ^= FastPort.GetHashCode();
      if (CaCert.Length != 0) hash ^= CaCert.GetHashCode();
      if (ConnectToken.Length != 0) hash ^= ConnectToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ReconnectToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReconnectToken);
      }
      if (PeerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PeerId);
      }
      if (FastPort != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FastPort);
      }
      if (CaCert.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(CaCert);
      }
      if (ConnectToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ConnectToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ReconnectToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReconnectToken);
      }
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeerId);
      }
      if (FastPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FastPort);
      }
      if (CaCert.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CaCert);
      }
      if (ConnectToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ReconnectToken.Length != 0) {
        ReconnectToken = other.ReconnectToken;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      if (other.FastPort != 0) {
        FastPort = other.FastPort;
      }
      if (other.CaCert.Length != 0) {
        CaCert = other.CaCert;
      }
      if (other.ConnectToken.Length != 0) {
        ConnectToken = other.ConnectToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            ReconnectToken = input.ReadString();
            break;
          }
          case 24: {
            PeerId = input.ReadInt32();
            break;
          }
          case 32: {
            FastPort = input.ReadInt32();
            break;
          }
          case 42: {
            CaCert = input.ReadBytes();
            break;
          }
          case 50: {
            ConnectToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  ///:dontdeserialize
  /// </summary>
  public sealed partial class PingCommand : pb::IMessage<PingCommand> {
    private static readonly pb::MessageParser<PingCommand> _parser = new pb::MessageParser<PingCommand>(() => new PingCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingCommand(PingCommand other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingCommand Clone() {
      return new PingCommand(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingCommand other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  ///:dontserialize
  /// </summary>
  public sealed partial class PingResult : pb::IMessage<PingResult> {
    private static readonly pb::MessageParser<PingResult> _parser = new pb::MessageParser<PingResult>(() => new PingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResult(PingResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResult Clone() {
      return new PingResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  ///:dontdeserialize
  /// </summary>
  public sealed partial class VerifyIdentityCommand : pb::IMessage<VerifyIdentityCommand> {
    private static readonly pb::MessageParser<VerifyIdentityCommand> _parser = new pb::MessageParser<VerifyIdentityCommand>(() => new VerifyIdentityCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyIdentityCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyIdentityCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyIdentityCommand(VerifyIdentityCommand other) : this() {
      peerId_ = other.peerId_;
      connectToken_ = other.connectToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyIdentityCommand Clone() {
      return new VerifyIdentityCommand(this);
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 1;
    private int peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    /// <summary>Field number for the "connectToken" field.</summary>
    public const int ConnectTokenFieldNumber = 2;
    private string connectToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectToken {
      get { return connectToken_; }
      set {
        connectToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyIdentityCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyIdentityCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeerId != other.PeerId) return false;
      if (ConnectToken != other.ConnectToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (ConnectToken.Length != 0) hash ^= ConnectToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PeerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeerId);
      }
      if (ConnectToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeerId);
      }
      if (ConnectToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyIdentityCommand other) {
      if (other == null) {
        return;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      if (other.ConnectToken.Length != 0) {
        ConnectToken = other.ConnectToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeerId = input.ReadInt32();
            break;
          }
          case 18: {
            ConnectToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  ///:dontserialize
  /// </summary>
  public sealed partial class VerifyIdentityResult : pb::IMessage<VerifyIdentityResult> {
    private static readonly pb::MessageParser<VerifyIdentityResult> _parser = new pb::MessageParser<VerifyIdentityResult>(() => new VerifyIdentityResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyIdentityResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyIdentityResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyIdentityResult(VerifyIdentityResult other) : this() {
      success_ = other.success_;
      peerId_ = other.peerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyIdentityResult Clone() {
      return new VerifyIdentityResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 2;
    private int peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyIdentityResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyIdentityResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (PeerId != other.PeerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (PeerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PeerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyIdentityResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            PeerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  /// </summary>
  public sealed partial class UDPConnectMessage : pb::IMessage<UDPConnectMessage> {
    private static readonly pb::MessageParser<UDPConnectMessage> _parser = new pb::MessageParser<UDPConnectMessage>(() => new UDPConnectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UDPConnectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UDPConnectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UDPConnectMessage(UDPConnectMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UDPConnectMessage Clone() {
      return new UDPConnectMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UDPConnectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UDPConnectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UDPConnectMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  ///:dontserialize
  /// </summary>
  public sealed partial class PlayerConnectMessage : pb::IMessage<PlayerConnectMessage> {
    private static readonly pb::MessageParser<PlayerConnectMessage> _parser = new pb::MessageParser<PlayerConnectMessage>(() => new PlayerConnectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerConnectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerConnectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerConnectMessage(PlayerConnectMessage other) : this() {
      peerId_ = other.peerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerConnectMessage Clone() {
      return new PlayerConnectMessage(this);
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 1;
    private int peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerConnectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerConnectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeerId != other.PeerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PeerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerConnectMessage other) {
      if (other == null) {
        return;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///:access=internal
  ///:dontserialize
  /// </summary>
  public sealed partial class PlayerDisconnectMessage : pb::IMessage<PlayerDisconnectMessage> {
    private static readonly pb::MessageParser<PlayerDisconnectMessage> _parser = new pb::MessageParser<PlayerDisconnectMessage>(() => new PlayerDisconnectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerDisconnectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Gamelift.Rt.Proto.CoreCommandsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDisconnectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDisconnectMessage(PlayerDisconnectMessage other) : this() {
      peerId_ = other.peerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDisconnectMessage Clone() {
      return new PlayerDisconnectMessage(this);
    }

    /// <summary>Field number for the "peerId" field.</summary>
    public const int PeerIdFieldNumber = 1;
    private int peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerDisconnectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerDisconnectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeerId != other.PeerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PeerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerDisconnectMessage other) {
      if (other == null) {
        return;
      }
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
