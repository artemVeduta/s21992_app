//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace GameLiftRealtimeNative {

public class NativeByteArray : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NativeByteArray(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NativeByteArray obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NativeByteArray() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          GameLiftRealtimeNativePINVOKE.delete_NativeByteArray(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public NativeByteArray(int nelements) : this(GameLiftRealtimeNativePINVOKE.new_NativeByteArray(nelements), true) {
  }

  public byte getitem(int index) {
    byte ret = GameLiftRealtimeNativePINVOKE.NativeByteArray_getitem(swigCPtr, index);
    return ret;
  }

  public void setitem(int index, byte value) {
    GameLiftRealtimeNativePINVOKE.NativeByteArray_setitem(swigCPtr, index, value);
  }

  public SWIGTYPE_p_unsigned_char cast() {
    global::System.IntPtr cPtr = GameLiftRealtimeNativePINVOKE.NativeByteArray_cast(swigCPtr);
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public static NativeByteArray frompointer(SWIGTYPE_p_unsigned_char t) {
    global::System.IntPtr cPtr = GameLiftRealtimeNativePINVOKE.NativeByteArray_frompointer(SWIGTYPE_p_unsigned_char.getCPtr(t));
    NativeByteArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new NativeByteArray(cPtr, false);
    return ret;
  }

}

}
